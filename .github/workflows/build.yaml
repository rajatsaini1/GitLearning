name: Notify Slack on workflow trigger

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository (to access slack_mapping.json)
      - name: Checkout repo
        uses: actions/checkout@v4

      # Build Docker image (optional, for testing)
      - name: Build Docker image
        run: docker build -t my-python-app .

      # Map GitHub username to Slack ID
      - name: Map GitHub user to Slack ID
        id: slackmap
        run: |
          GITHUB_USER="${{ github.actor }}"
          SLACK_ID=$(jq -r --arg user "$GITHUB_USER" '.[$user]' slack_mapping.json)
          if [ "$SLACK_ID" == "null" ] || [ -z "$SLACK_ID" ]; then
            SLACK_ID=$GITHUB_USER
          fi
          echo "slack_id=$SLACK_ID" >> $GITHUB_OUTPUT

      # Send Slack notification with workflow status
      - name: Send Slack notification
        if: always()  # ensures it runs even if previous steps fail
        run: |
          SLACK_ID=${{ steps.slackmap.outputs.slack_id }}
          # Detect job status
          STATUS="UNKNOWN"
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="✅ SUCCESS"
            COLOR="good"
          else
            STATUS="❌ FAILURE"
            COLOR="danger"
          fi
          # Send Slack message
          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \":rocket: Workflow *${{ github.workflow }}* triggered by <@$SLACK_ID>\",
              \"attachments\": [
                {
                  \"color\": \"$COLOR\",
                  \"fields\": [
                    {\"title\": \"Repository\", \"value\": \"${{ github.repository }}\", \"short\": true},
                    {\"title\": \"Branch\", \"value\": \"${{ github.ref_name }}\", \"short\": true},
                    {\"title\": \"Status\", \"value\": \"$STATUS\", \"short\": true},
                    {\"title\": \"Actor\", \"value\": \"<@$SLACK_ID>\", \"short\": true}
                  ]
                }
              ]
            }" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
